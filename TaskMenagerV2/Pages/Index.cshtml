@page
@model IndexModel
@inject MyDbContext DbContext
@using TaskMenager.Components.dbcontroll;
@using Microsoft.EntityFrameworkCore;

@{
    ViewData["Title"] = "Home page";
    var projects = DbContext.Projects.ToDictionary(p => p.ProjectId, p => p);
    var colors = new string[] { "primary", "secondary", "success", "danger", "warning", "info", "dark" };
    Random rand = new Random();
}

<div class="container">
    <div class="pt-3 pb-3">
        <h2>Today's and upcomming tasks:</h2>
        <div class="container">
            @foreach (var task in DbContext.Tasks)
            {
                if (task.DateOfCompletion.Date >= DateTime.Today)
                {
                    var color = colors[rand.Next(colors.Length)];

                    <div class="row mb-4">
                        <div class="col-md-4 mb-3 d-flex flex-column justify-content-start">
                            <div class="card border border-3 rounded-5 text-white bg-@color h-100 w-75 d-flex flex-column justify-content-between p-3 shadow-sm">
                                <div>@task.Description</div>
                                <div class="pt-2">@task.DateOfCreation</div>
                                @foreach (var project in projects.Values)
                                {
                                    if (project.ProjectId == task.ProjectId && task.ProjectId != 0)
                                    {
                                        <div class="pt-2">From project: @project.Name</div>
                                    }
                                }

                                <form method="post" asp-page-handler="UpdateCompletion" class="pt-2">
                                    <input type="hidden" asp-for="@task.Id" name="taskId" />
                                    <button type="submit" name="Completion" id="Completion" class="btn btn-outline-light">
                                        @(task.Completion != 0 ? "Completed" : "Not Completed")
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <h2 class="pt-4">Past tasks:</h2>
        <div class="container">
            @foreach (var task in DbContext.Tasks)
            {
                if (task.DateOfCompletion.Date < DateTime.Today && task.Completion == 0)
                {
                    var color = colors[rand.Next(colors.Length)];

                    <div class="row mb-4">
                        <div class="card border border-3 rounded-5 text-white bg-@color h-100 w-75 d-flex flex-column justify-content-between p-3 shadow-sm">
                            <div>@task.Description</div>
                            <div class="pt-2">@task.DateOfCreation</div>
                            @foreach (var project in projects.Values)
                            {
                                if (project.ProjectId == task.ProjectId && task.ProjectId != 0)
                                {
                                    <div class="pt-2">From project: @project.Name</div>
                                }
                            }
                            <form method="post" asp-page-handler="UpdateCompletion" class="pt-2">
                                <input type="hidden" asp-for="@task.Id" name="taskId" />
                                <button type="submit" name="Completion" id="Completion" class="btn btn-outline-light">
                                    @(task.Completion != 0 ? "Completed" : "Not Completed")
                                </button>
                            </form>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <div class="pt-4 pb-3 container">
        <h2>Projects</h2>
        <div class="container">
            @foreach (var project in projects.Values)
            {
                if (project.ProjectId != 0)
                {
                    double completed = 0;
                    double ammount = 0;
                    foreach (var task in project.Tasks)
                    {
                        if(task.Completion == 1)
                        {
                            completed+=1;
                        }
                        ammount+=1;
                    }

                    int PercentCompletion = Convert.ToInt32( (completed / ammount) * 100);
                    Console.WriteLine($"ammount: {ammount}, completed: {completed}, PercentCompletion: {PercentCompletion}");

                    var color = colors[rand.Next(colors.Length)];

                    <div class="row mb-4">
                        <div class="col-md-4 mb-3 d-flex flex-column justify-content-start">
                            <div class="card border border-3 rounded-5 text-white bg-@color h-100 d-flex flex-column justify-content-between p-3 shadow-sm w-100">
                                <div>@project.Name</div>
                                <div class="pt-2">@project.Description</div>
                                <div class="pt-2">
                                    <p>Project: @project.Name</p>
                                </div>
                                <div class="pt-2"><progress max="100" value="@PercentCompletion"></progress>  @PercentCompletion%</div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
