@page
@model TaskMenagerV2.Pages.AccountModel
@inject MyDbContext DbContext
@using TaskMenager.Components.dbcontroll;
@using Microsoft.EntityFrameworkCore;
@using TaskMenagerV2.Pages.Services
@using TaskMenagerV2.Pages.dbcontroll;
@{
    ViewData["Title"] = "Account";
    var user = ViewData["User"] as User;
    var achievementsString = user?.Achivements;
    var achievementsList = achievementsString?.Split(',').Select(int.Parse).ToList() ?? new List<int>();
}

<div class="container">
    <div class="text-center tp-4">
        <h2 class="display-4">Welcome back!</h2>
        @if (HttpContext.Session.GetString("UserId") != null)
        {
@*             <p class="tp-2">@user.Name!</p>
            <p class="tp-2">Your email: @user.Email</p> *@

            <form method="post" asp-page-handler="Logout" class="pt-2 pb-3">
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>
            <button onclick="toggleTasksVisibility()" class="btn btn-outline-secondary mt-2 pb-2 mb-3">Change Account data</button>
            <div id="ChangeData" style="display: none;" class="mb-4">
                <form method="post" asp-page-handler="UpdatePassword" class="pt-2 align-content-center d-flex justify-content-center w-100">
                    <div class="w-50 text-start">
                        <input type="hidden" name="userId" value="@user.UserId" />
                        <div class="form-group pb-3 w-100">
                            <label asp-for="UserC.Email"></label>
                            <input asp-for="UserC.Email" class="form-control" placeholder="@user.Email" />
                            <span asp-validation-for="UserC.Email" class="text-danger"></span>
                        </div>
                        <div class="form-group pb-3 w-100">
                            <label asp-for="UserC.Name"></label>
                            <input asp-for="UserC.Name" class="form-control input-dark" placeholder="@user.Name" />
                            <span asp-validation-for="UserC.Name" class="text-danger"></span>
                        </div>
                        <div class="form-group pb-3 w-100">
                            <label asp-for="UserC.Password"></label>
                            <input asp-for="UserC.Password" class="form-control" />
                            <span asp-validation-for="UserC.Password" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary pt-2 mb-4">Change data</button>
                    </div>
                </form>
            </div>

            <div class="row justify-content-center pb-3">
                <div class="col-md-8">
                    <h2>Completed Achievements</h2>
                    <div class="row">
                        @for (int i = 0; i < achievementsList.Count; i++)
                        {
                            if (achievementsList[i] == 1)
                            {
                                var achievement = DbContext.Achievements.FirstOrDefault(a => a.Id == i + 1);
                                if (achievement != null)
                                {
                                    <div class="col-md-4 pt-2 pb-2">
                                        <div class="card">
                                            <div class="card-body">
                                                <h5 class="card-title">@achievement.Name</h5>
                                                <p class="card-text">@achievement.Description</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                        @if (!achievementsList.Any(a => a == 1))
                        {
                            <div class="h4">No completed achievements.</div>
                        }
                    </div>

                    <h2 class="pt-3">Incompleted Achievements</h2>
                    <div class="row">
                        @for (int i = 0; i < achievementsList.Count; i++)
                        {
                            if (achievementsList[i] == 0)
                            {
                                var achievement = DbContext.Achievements.FirstOrDefault(a => a.Id == i + 1);
                                if (achievement != null)
                                {
                                    <div class="col-md-4 pt-2 pb-2">
                                        <div class="card">
                                            <div class="card-body">
                                                <h5 class="card-title">@achievement.Name</h5>
                                                <p class="card-text">@achievement.Description</p>
                                                @switch (achievement.Id)
                                                {
                                                    case 4:
                                                        double completed = DbContext.Tasks.Where(t => t.UserId == int.Parse(HttpContext.Session.GetString("UserId"))).Count(t => t.Completion == 1);
                                                        int PercentCompletion = Convert.ToInt32((completed / 10) * 100);
                                                        <div class="pt-2"><progress max="100" value="@PercentCompletion"></progress> @PercentCompletion%</div>
                                                        break;
                                                    case 5:
                                                        completed = DbContext.Tasks.Where(t => t.UserId == int.Parse(HttpContext.Session.GetString("UserId"))).Count(t => t.Completion == 1);
                                                        PercentCompletion = Convert.ToInt32((completed / 50) * 100);
                                                        <div class="pt-2"><progress max="100" value="@PercentCompletion"></progress> @PercentCompletion%</div>
                                                        break;
                                                    case 6:
                                                        completed = DbContext.Tasks.Where(t => t.UserId == int.Parse(HttpContext.Session.GetString("UserId"))).Count(t => t.Completion == 1);
                                                        PercentCompletion = Convert.ToInt32((completed / 100) * 100);
                                                        <div class="pt-2"><progress max="100" value="@PercentCompletion"></progress> @PercentCompletion%</div>
                                                        break;
                                                    case 9:
                                                        int completedProjects = DbContext.Projects.Where(t => t.UserId == int.Parse(HttpContext.Session.GetString("UserId"))).Count(p => p.Tasks.All(t => t.Completion == 1));
                                                        PercentCompletion = Convert.ToInt32((completedProjects / 10) * 100);
                                                        <div class="pt-2"><progress max="100" value="@PercentCompletion"></progress> @PercentCompletion%</div>
                                                        break;
                                                    case 10:
                                                        completed = DbContext.Tasks.Where(t => t.UserId == int.Parse(HttpContext.Session.GetString("UserId"))).Count(t => t.Completion == 1);
                                                        PercentCompletion = Convert.ToInt32((completed / 10) * 100);
                                                        <div class="pt-2"><progress max="100" value="@PercentCompletion"></progress> @PercentCompletion%</div>
                                                        break;
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            </div>

            <form id="deleteForm" method="post" class="mt-4 mb-4" asp-page-handler="DeleteAccount">
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">Delete Account</button>
                <input type="hidden" name="userId" value="@user.UserId" />
            </form>

            <!-- Button trigger modal -->
            <!--<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Launch demo modal
            </button>-->

            <!-- Modal -->
            <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog bg-dark">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Are you sure?</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete your account? This action cannot be undone.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" onclick="confirmDelete()">Confirm</button>
                        </div>
                    </div>
                </div>
            </div>

        }
        else
        {
            <p>Please log in or register.</p>
            <a class="btn text-body-secondary" asp-area="" asp-page="/Login">Log in</a>
            <a class="btn text-body-secondary" asp-area="" asp-page="/Registration">Register</a>
        }
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete() {
            // if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
            //     document.getElementById('deleteForm').submit();
            // }
            document.getElementById('deleteForm').submit();
        }

        function toggleTasksVisibility() {
            var tasksContainer = document.getElementById('ChangeData');
            if (tasksContainer.style.display === 'none') {
                tasksContainer.style.display = 'block';
            } else {
                tasksContainer.style.display = 'none';
            }
        }

        var myModal = document.getElementById('deleteModal')
        var myInput = document.getElementById('myInput')

        myModal.addEventListener('shown.bs.modal', function () {
            myInput.focus()
        })

    </script>
}
